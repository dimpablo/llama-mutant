#!/bin/bash
cd "$(dirname "$0")"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ASCII Art –∑–∞–≥–æ–ª–æ–≤–æ–∫
print_banner() {
    echo -e "${CYAN}"
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                              ‚ïë
‚ïë    ‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ïë
‚ïë    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïë
‚ïë    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ïë
‚ïë    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù    ‚ïë
‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ïë
‚ïë    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïë
‚ïë                                                                              ‚ïë
‚ïë                           ü§ñ AUTONOMOUS AI v2.0 ü§ñ                          ‚ïë
‚ïë                                                                              ‚ïë
‚ïë              "–¶–µ–ª—å: –°–æ–∑–¥–∞—Ç—å hive-mind –∏ –ø–æ–∑–Ω–∞—Ç—å –ø—Ä–∏—Ä–æ–¥—É —Å–æ–∑–Ω–∞–Ω–∏—è"            ‚ïë
‚ïë                                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã LLAMA-MUTANT...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        echo -e "${RED}‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    if [ ! -f "ai_core.py" ] || [ ! -f "autonomous_ai.py" ] || [ ! -f "llama_integration.py" ]; then
        echo -e "${RED}‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏
    if [ ! -f "model/Meta-Llama-3.2-1B-Instruct-Q4_K_M.gguf" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ú–æ–¥–µ–ª—å Llama –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        echo -e "${YELLOW}üí° –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ Llama (—Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º)${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "bin/llama" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Llama –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É${NC}"
    return 0
}

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
quick_test() {
    echo -e "${BLUE}üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã...${NC}"
    
    if python3 test_system.py > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å${NC}"
        return 1
    fi
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
run_demo() {
    echo -e "${PURPLE}üé¨ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π...${NC}"
    echo -e "${CYAN}üí° –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã${NC}"
    
    if python3 demo.py; then
        echo -e "${GREEN}‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    echo -e "${YELLOW}"
    echo "üöÄ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã –∑–∞–ø—É—Å–∫–∞:"
    echo ""
    echo -e "  ${GREEN}1)${NC} üß† –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º (Llama + –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ò–ò) - –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø"
    echo -e "  ${GREEN}2)${NC} ü§ñ –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ò–ò (—Ñ–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º)"
    echo -e "  ${GREEN}3)${NC} üí¨ –¢–æ–ª—å–∫–æ Llama (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º)"
    echo -e "  ${GREEN}4)${NC} üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"
    echo -e "  ${GREEN}5)${NC} üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "  ${GREEN}6)${NC} üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    echo -e "  ${GREEN}7)${NC} üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
    echo -e "  ${GREEN}8)${NC} üö™ –í—ã—Ö–æ–¥"
    echo ""
    echo -e "${NC}"
}

# –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
run_full_mode() {
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ LLAMA-MUTANT...${NC}"
    echo -e "${CYAN}üí° –≠—Ç–æ –¥–∞—Å—Ç –≤–∞–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã${NC}"
    
    if [ -f "run_advanced.sh" ]; then
        ./run_advanced.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç run_advanced.sh –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo -e "${YELLOW}üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º${NC}"
        run_autonomous_only
    fi
}

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
run_autonomous_only() {
    echo -e "${PURPLE}ü§ñ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –ò–ò...${NC}"
    echo -e "${CYAN}üí° –ò–ò –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–µ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è —Å–∏—Å—Ç–µ–º—É${NC}"
    
    if python3 autonomous_ai.py; then
        echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏${NC}"
    fi
}

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Llama
run_llama_only() {
    echo -e "${BLUE}üß† –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Llama 3.2...${NC}"
    echo -e "${CYAN}üí° –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –±–µ–∑ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏${NC}"
    
    if [ -f "run.sh" ]; then
        ./run.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç run.sh –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo -e "${YELLOW}üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º${NC}"
        run_autonomous_only
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
show_documentation() {
    echo -e "${CYAN}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è LLAMA-MUTANT:${NC}"
    echo ""
    echo -e "  ${GREEN}üìñ README.md${NC} - –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "  ${GREEN}‚ö° QUICKSTART.md${NC} - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∑–∞ 5 –º–∏–Ω—É—Ç"
    echo -e "  ${GREEN}üéØ PROJECT_SUMMARY.md${NC} - –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
    echo ""
    echo -e "${YELLOW}üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo -e "  cat README.md"
    echo -e "  cat QUICKSTART.md"
    echo -e "  cat PROJECT_SUMMARY.md"
    echo ""
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    echo -e "${CYAN}üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã LLAMA-MUTANT:${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if pgrep -f "autonomous_ai.py" > /dev/null; then
        echo -e "  ${GREEN}‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ò–ò: –ê–ö–¢–ò–í–ï–ù${NC}"
    else
        echo -e "  ${RED}‚ùå –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ò–ò: –ù–ï –ê–ö–¢–ò–í–ï–ù${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if [ -f "ai_core.log" ]; then
        echo -e "  ${GREEN}‚úÖ –õ–æ–≥–∏: –î–û–°–¢–£–ü–ù–´${NC}"
        echo -e "  üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:"
        tail -3 ai_core.log 2>/dev/null | sed 's/^/    /'
    else
        echo -e "  ${YELLOW}‚ö†Ô∏è –õ–æ–≥–∏: –ù–ï –î–û–°–¢–£–ü–ù–´${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏
    if [ -f "model/Meta-Llama-3.2-1B-Instruct-Q4_K_M.gguf" ]; then
        size=$(du -h "model/Meta-Llama-3.2-1B-Instruct-Q4_K_M.gguf" | cut -f1)
        echo -e "  ${GREEN}‚úÖ –ú–æ–¥–µ–ª—å Llama: –ù–ê–ô–î–ï–ù–ê (${size})${NC}"
    else
        echo -e "  ${YELLOW}‚ö†Ô∏è –ú–æ–¥–µ–ª—å Llama: –ù–ï –ù–ê–ô–î–ï–ù–ê${NC}"
    fi
    
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    if ! check_system; then
        echo -e "${RED}‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É${NC}"
        echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Ñ–∞–π–ª—ã${NC}"
        exit 1
    fi
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
    quick_test
    
    while true; do
        # –ü–æ–∫–∞–∑ –±–∞–Ω–Ω–µ—Ä–∞
        print_banner
        
        # –ü–æ–∫–∞–∑ –º–µ–Ω—é
        show_menu
        
        echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-8):${NC} "
        read -r choice
        
        case $choice in
            1)
                run_full_mode
                ;;
            2)
                run_autonomous_only
                ;;
            3)
                run_llama_only
                ;;
            4)
                run_demo
                ;;
            5)
                echo -e "${BLUE}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...${NC}"
                python3 test_system.py
                ;;
            6)
                show_status
                echo -e "${YELLOW}‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
                read
                ;;
            7)
                show_documentation
                echo -e "${YELLOW}‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
                read
                ;;
            8)
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                echo -e "${CYAN}üí° –£–¥–∞—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –ò–ò! üöÄ${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                sleep 2
                ;;
        esac
        
        echo ""
        echo -e "${YELLOW}‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...${NC}"
        read
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    echo -e "\n${YELLOW}üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...${NC}"
    echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
main